export const rebalanceAdapterAbi = [
  {
    inputs: [{ internalType: 'address', name: 'target', type: 'address' }],
    name: 'AddressEmptyCode',
    type: 'error',
  },
  { inputs: [], name: 'AuctionNotValid', type: 'error' },
  { inputs: [], name: 'AuctionStillValid', type: 'error' },
  {
    inputs: [{ internalType: 'address', name: 'implementation', type: 'address' }],
    name: 'ERC1967InvalidImplementation',
    type: 'error',
  },
  { inputs: [], name: 'ERC1967NonPayable', type: 'error' },
  { inputs: [], name: 'FailedCall', type: 'error' },
  { inputs: [], name: 'InvalidAuctionDuration', type: 'error' },
  { inputs: [], name: 'InvalidCollateralRatios', type: 'error' },
  { inputs: [], name: 'InvalidInitialization', type: 'error' },
  {
    inputs: [{ internalType: 'uint256', name: 'targetCollateralRatio', type: 'uint256' }],
    name: 'InvalidTargetCollateralRatio',
    type: 'error',
  },
  { inputs: [], name: 'LeverageTokenAlreadySet', type: 'error' },
  { inputs: [], name: 'LeverageTokenNotEligibleForRebalance', type: 'error' },
  { inputs: [], name: 'MinPriceMultiplierTooHigh', type: 'error' },
  { inputs: [], name: 'NotInitializing', type: 'error' },
  {
    inputs: [{ internalType: 'address', name: 'owner', type: 'address' }],
    name: 'OwnableInvalidOwner',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
    name: 'OwnableUnauthorizedAccount',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'address', name: 'token', type: 'address' }],
    name: 'SafeERC20FailedOperation',
    type: 'error',
  },
  { inputs: [], name: 'UUPSUnauthorizedCallContext', type: 'error' },
  {
    inputs: [{ internalType: 'bytes32', name: 'slot', type: 'bytes32' }],
    name: 'UUPSUnsupportedProxiableUUID',
    type: 'error',
  },
  { inputs: [], name: 'Unauthorized', type: 'error' },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          { internalType: 'bool', name: 'isOverCollateralized', type: 'bool' },
          { internalType: 'uint120', name: 'startTimestamp', type: 'uint120' },
          { internalType: 'uint120', name: 'endTimestamp', type: 'uint120' },
        ],
        indexed: false,
        internalType: 'struct Auction',
        name: 'auction',
        type: 'tuple',
      },
    ],
    name: 'AuctionCreated',
    type: 'event',
  },
  { anonymous: false, inputs: [], name: 'AuctionEnded', type: 'event' },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'minCollateralRatio', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'targetCollateralRatio', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'maxCollateralRatio', type: 'uint256' },
    ],
    name: 'CollateralRatiosRebalanceAdapterInitialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'auctionDuration', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'initialPriceMultiplier', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'minPriceMultiplier', type: 'uint256' },
    ],
    name: 'DutchAuctionRebalanceAdapterInitialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'uint64', name: 'version', type: 'uint64' }],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ILeverageToken',
        name: 'leverageToken',
        type: 'address',
      },
    ],
    name: 'LeverageTokenSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'previousOwner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'newOwner', type: 'address' },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'collateralRatioThreshold',
        type: 'uint256',
      },
      { indexed: false, internalType: 'uint256', name: 'rebalanceReward', type: 'uint256' },
    ],
    name: 'PreLiquidationRebalanceAdapterInitialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'authorizedCreator', type: 'address' },
      {
        indexed: true,
        internalType: 'contract ILeverageManager',
        name: 'leverageManager',
        type: 'address',
      },
    ],
    name: 'RebalanceAdapterInitialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'taker', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'amountIn', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'amountOut', type: 'uint256' },
    ],
    name: 'Take',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: true, internalType: 'address', name: 'implementation', type: 'address' }],
    name: 'Upgraded',
    type: 'event',
  },
  {
    inputs: [],
    name: 'PRICE_MULTIPLIER_PRECISION',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'REWARD_BASE',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'UPGRADE_INTERFACE_VERSION',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'createAuction',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  { inputs: [], name: 'endAuction', outputs: [], stateMutability: 'nonpayable', type: 'function' },
  {
    inputs: [{ internalType: 'uint256', name: 'amountOut', type: 'uint256' }],
    name: 'getAmountIn',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAuction',
    outputs: [
      {
        components: [
          { internalType: 'bool', name: 'isOverCollateralized', type: 'bool' },
          { internalType: 'uint120', name: 'startTimestamp', type: 'uint120' },
          { internalType: 'uint120', name: 'endTimestamp', type: 'uint120' },
        ],
        internalType: 'struct Auction',
        name: 'auction',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAuctionDuration',
    outputs: [{ internalType: 'uint120', name: '', type: 'uint120' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAuthorizedCreator',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCollateralRatioThreshold',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCurrentAuctionMultiplier',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getInitialPriceMultiplier',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getLeverageManager',
    outputs: [{ internalType: 'contract ILeverageManager', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getLeverageToken',
    outputs: [{ internalType: 'contract ILeverageToken', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'contract ILeverageToken', name: 'token', type: 'address' }],
    name: 'getLeverageTokenInitialCollateralRatio',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getLeverageTokenMaxCollateralRatio',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getLeverageTokenMinCollateralRatio',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getLeverageTokenRebalanceStatus',
    outputs: [
      { internalType: 'bool', name: 'isEligible', type: 'bool' },
      { internalType: 'bool', name: 'isOverCollateralized', type: 'bool' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getLeverageTokenTargetCollateralRatio',
    outputs: [{ internalType: 'uint256', name: 'targetCollateralRatio', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinPriceMultiplier',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getRebalanceReward',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'address', name: 'owner', type: 'address' },
          { internalType: 'address', name: 'authorizedCreator', type: 'address' },
          { internalType: 'contract ILeverageManager', name: 'leverageManager', type: 'address' },
          { internalType: 'uint256', name: 'minCollateralRatio', type: 'uint256' },
          { internalType: 'uint256', name: 'targetCollateralRatio', type: 'uint256' },
          { internalType: 'uint256', name: 'maxCollateralRatio', type: 'uint256' },
          { internalType: 'uint120', name: 'auctionDuration', type: 'uint120' },
          { internalType: 'uint256', name: 'initialPriceMultiplier', type: 'uint256' },
          { internalType: 'uint256', name: 'minPriceMultiplier', type: 'uint256' },
          {
            internalType: 'uint256',
            name: 'preLiquidationCollateralRatioThreshold',
            type: 'uint256',
          },
          { internalType: 'uint256', name: 'rebalanceReward', type: 'uint256' },
        ],
        internalType: 'struct RebalanceAdapter.RebalanceAdapterInitParams',
        name: 'params',
        type: 'tuple',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isAuctionValid',
    outputs: [{ internalType: 'bool', name: 'isValid', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'contract ILeverageToken', name: 'token', type: 'address' },
      {
        components: [
          { internalType: 'uint256', name: 'collateralInDebtAsset', type: 'uint256' },
          { internalType: 'uint256', name: 'debt', type: 'uint256' },
          { internalType: 'uint256', name: 'equity', type: 'uint256' },
          { internalType: 'uint256', name: 'collateralRatio', type: 'uint256' },
        ],
        internalType: 'struct LeverageTokenState',
        name: 'state',
        type: 'tuple',
      },
      { internalType: 'address', name: 'caller', type: 'address' },
    ],
    name: 'isEligibleForRebalance',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'contract ILeverageToken', name: 'token', type: 'address' },
      {
        components: [
          { internalType: 'uint256', name: 'collateralInDebtAsset', type: 'uint256' },
          { internalType: 'uint256', name: 'debt', type: 'uint256' },
          { internalType: 'uint256', name: 'equity', type: 'uint256' },
          { internalType: 'uint256', name: 'collateralRatio', type: 'uint256' },
        ],
        internalType: 'struct LeverageTokenState',
        name: 'stateBefore',
        type: 'tuple',
      },
    ],
    name: 'isStateAfterRebalanceValid',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'creator', type: 'address' },
      { internalType: 'address', name: 'leverageToken', type: 'address' },
    ],
    name: 'postLeverageTokenCreation',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'proxiableUUID',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'amountOut', type: 'uint256' }],
    name: 'take',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'newImplementation', type: 'address' },
      { internalType: 'bytes', name: 'data', type: 'bytes' },
    ],
    name: 'upgradeToAndCall',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
] as const
