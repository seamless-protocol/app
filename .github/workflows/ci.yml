name: CI

on:
  push:
    branches: [main]
  pull_request:
    # Run on all pull requests regardless of target branch

jobs:
  check:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: bun install --frozen-lockfile
      
      - name: Generate route tree
        run: bunx @tanstack/router-cli generate --config vite.config.ts
      
      - name: Run checks (lint + typecheck)
        run: bun run check

  test-unit:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: bun install --frozen-lockfile
      
      - name: Generate route tree
        run: bunx @tanstack/router-cli generate --config vite.config.ts
      
      - name: Run unit tests
        run: bunx vitest --run tests/unit --config vitest.config.ts

  test-e2e:
    name: E2E Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Install Foundry (for Anvil fallback)
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: Run E2E tests (Mainnet wstETH/WETH 25x, Tenderly JIT VNet)
        run: bun run test:e2e
        env:
          TENDERLY_ACCOUNT: ${{ secrets.TENDERLY_ACCOUNT }}
          TENDERLY_ACCOUNT_SLUG: ${{ secrets.TENDERLY_ACCOUNT_SLUG }}
          TENDERLY_PROJECT: ${{ secrets.TENDERLY_PROJECT }}
          TENDERLY_PROJECT_SLUG: ${{ secrets.TENDERLY_PROJECT_SLUG }}
          TENDERLY_ACCESS_KEY: ${{ secrets.TENDERLY_ACCESS_KEY }}
          TENDERLY_TOKEN: ${{ secrets.TENDERLY_TOKEN }}
          VITE_WALLETCONNECT_PROJECT_ID: ${{ secrets.VITE_WALLETCONNECT_PROJECT_ID }}
          VITE_LIFI_API_KEY: ${{ secrets.VITE_LIFI_API_KEY }}
          VITE_LIFI_INTEGRATOR: seamless

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7

  test-integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    env:
      TENDERLY_ACCOUNT: ${{ secrets.TENDERLY_ACCOUNT }}
      TENDERLY_ACCOUNT_SLUG: ${{ secrets.TENDERLY_ACCOUNT_SLUG }}
      TENDERLY_PROJECT: ${{ secrets.TENDERLY_PROJECT }}
      TENDERLY_PROJECT_SLUG: ${{ secrets.TENDERLY_PROJECT_SLUG }}
      TENDERLY_ACCESS_KEY: ${{ secrets.TENDERLY_ACCESS_KEY }}
      VITE_LIFI_INTEGRATOR: seamless

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Install Foundry (for Anvil fallback)
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: Prepare integration env
        run: |
          cp tests/integration/.env.example tests/integration/.env
          echo "Integration test environment prepared"

      - name: Run integration tests (Mainnet wstETH/WETH 25x only, Tenderly Jit Vnet, LIFI)
        run: bun run test:integration:wsteth
        env:
          TENDERLY_ACCOUNT: ${{ secrets.TENDERLY_ACCOUNT }}
          TENDERLY_ACCOUNT_SLUG: ${{ secrets.TENDERLY_ACCOUNT_SLUG }}
          TENDERLY_PROJECT: ${{ secrets.TENDERLY_PROJECT }}
          TENDERLY_PROJECT_SLUG: ${{ secrets.TENDERLY_PROJECT_SLUG }}
          TENDERLY_ACCESS_KEY: ${{ secrets.TENDERLY_ACCESS_KEY }}
          TENDERLY_TOKEN: ${{ secrets.TENDERLY_TOKEN }}
          VITE_LIFI_API_KEY: ${{ secrets.VITE_LIFI_API_KEY }}
          VITE_LIFI_INTEGRATOR: seamless


  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [check, test-unit, test-e2e, test-integration]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: bun install --frozen-lockfile
      
      - name: Generate route tree
        run: bunx @tanstack/router-cli generate --config vite.config.ts
      
      - name: Build application
        run: bun run build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: github.ref == 'refs/heads/main'
        with:
          name: dist
          path: dist/
          retention-days: 7
